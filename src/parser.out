Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> formula
Rule 1     formula -> LPAREN formula RPAREN
Rule 2     formula -> constraint
Rule 3     formula -> NOT formula
Rule 4     formula -> formula AND formula
Rule 5     formula -> formula OR formula
Rule 6     constraint -> concat
Rule 7     constraint -> length
Rule 8     constraint -> contains
Rule 9     constraint -> strstr
Rule 10    constraint -> equal
Rule 11    constraint -> regex
Rule 12    constraint -> allstring
Rule 13    concat -> var EQL var CONCAT var
Rule 14    equal -> var EQL var
Rule 15    equal -> NORMSTRING EQL var
Rule 16    equal -> var EQL NORMSTRING
Rule 17    contains -> var CONTAINS NORMSTRING
Rule 18    strstr -> var STRSTR NORMSTRING DECNUMBER
Rule 19    length -> LENGTH LPAREN var RPAREN LT DECNUMBER
Rule 20    length -> LENGTH LPAREN var RPAREN GT DECNUMBER
Rule 21    length -> LENGTH LPAREN var RPAREN LTE DECNUMBER
Rule 22    length -> LENGTH LPAREN var RPAREN GTE DECNUMBER
Rule 23    length -> LENGTH LPAREN var RPAREN EQL DECNUMBER
Rule 24    regex -> var IN REGEX
Rule 25    allstring -> ALLSTRING var
Rule 26    var -> VAR

Terminals, with rules where they appear

ALLSTRING            : 25
AND                  : 4
CONCAT               : 13
CONTAINS             : 17
DECNUMBER            : 18 19 20 21 22 23
EQL                  : 13 14 15 16 23
GT                   : 20
GTE                  : 22
IN                   : 24
LENGTH               : 19 20 21 22 23
LPAREN               : 1 19 20 21 22 23
LT                   : 19
LTE                  : 21
NORMSTRING           : 15 16 17 18
NOT                  : 3
OR                   : 5
REGEX                : 24
RPAREN               : 1 19 20 21 22 23
STRSTR               : 18
VAR                  : 26
error                : 

Nonterminals, with rules where they appear

allstring            : 12
concat               : 6
constraint           : 2
contains             : 8
equal                : 10
formula              : 1 3 4 4 5 5 0
length               : 7
regex                : 11
strstr               : 9
var                  : 13 13 13 14 14 15 16 17 18 19 20 21 22 23 24 25

Parsing method: LALR

state 0

    (0) S' -> . formula
    (1) formula -> . LPAREN formula RPAREN
    (2) formula -> . constraint
    (3) formula -> . NOT formula
    (4) formula -> . formula AND formula
    (5) formula -> . formula OR formula
    (6) constraint -> . concat
    (7) constraint -> . length
    (8) constraint -> . contains
    (9) constraint -> . strstr
    (10) constraint -> . equal
    (11) constraint -> . regex
    (12) constraint -> . allstring
    (13) concat -> . var EQL var CONCAT var
    (19) length -> . LENGTH LPAREN var RPAREN LT DECNUMBER
    (20) length -> . LENGTH LPAREN var RPAREN GT DECNUMBER
    (21) length -> . LENGTH LPAREN var RPAREN LTE DECNUMBER
    (22) length -> . LENGTH LPAREN var RPAREN GTE DECNUMBER
    (23) length -> . LENGTH LPAREN var RPAREN EQL DECNUMBER
    (17) contains -> . var CONTAINS NORMSTRING
    (18) strstr -> . var STRSTR NORMSTRING DECNUMBER
    (14) equal -> . var EQL var
    (15) equal -> . NORMSTRING EQL var
    (16) equal -> . var EQL NORMSTRING
    (24) regex -> . var IN REGEX
    (25) allstring -> . ALLSTRING var
    (26) var -> . VAR

    LPAREN          shift and go to state 2
    NOT             shift and go to state 16
    LENGTH          shift and go to state 5
    NORMSTRING      shift and go to state 8
    ALLSTRING       shift and go to state 1
    VAR             shift and go to state 10

    regex                          shift and go to state 3
    allstring                      shift and go to state 9
    strstr                         shift and go to state 12
    constraint                     shift and go to state 13
    contains                       shift and go to state 4
    equal                          shift and go to state 14
    length                         shift and go to state 15
    var                            shift and go to state 6
    formula                        shift and go to state 7
    concat                         shift and go to state 11

state 1

    (25) allstring -> ALLSTRING . var
    (26) var -> . VAR

    VAR             shift and go to state 10

    var                            shift and go to state 17

state 2

    (1) formula -> LPAREN . formula RPAREN
    (1) formula -> . LPAREN formula RPAREN
    (2) formula -> . constraint
    (3) formula -> . NOT formula
    (4) formula -> . formula AND formula
    (5) formula -> . formula OR formula
    (6) constraint -> . concat
    (7) constraint -> . length
    (8) constraint -> . contains
    (9) constraint -> . strstr
    (10) constraint -> . equal
    (11) constraint -> . regex
    (12) constraint -> . allstring
    (13) concat -> . var EQL var CONCAT var
    (19) length -> . LENGTH LPAREN var RPAREN LT DECNUMBER
    (20) length -> . LENGTH LPAREN var RPAREN GT DECNUMBER
    (21) length -> . LENGTH LPAREN var RPAREN LTE DECNUMBER
    (22) length -> . LENGTH LPAREN var RPAREN GTE DECNUMBER
    (23) length -> . LENGTH LPAREN var RPAREN EQL DECNUMBER
    (17) contains -> . var CONTAINS NORMSTRING
    (18) strstr -> . var STRSTR NORMSTRING DECNUMBER
    (14) equal -> . var EQL var
    (15) equal -> . NORMSTRING EQL var
    (16) equal -> . var EQL NORMSTRING
    (24) regex -> . var IN REGEX
    (25) allstring -> . ALLSTRING var
    (26) var -> . VAR

    LPAREN          shift and go to state 2
    NOT             shift and go to state 16
    LENGTH          shift and go to state 5
    NORMSTRING      shift and go to state 8
    ALLSTRING       shift and go to state 1
    VAR             shift and go to state 10

    regex                          shift and go to state 3
    allstring                      shift and go to state 9
    strstr                         shift and go to state 12
    constraint                     shift and go to state 13
    contains                       shift and go to state 4
    equal                          shift and go to state 14
    length                         shift and go to state 15
    var                            shift and go to state 6
    formula                        shift and go to state 18
    concat                         shift and go to state 11

state 3

    (11) constraint -> regex .

    RPAREN          reduce using rule 11 (constraint -> regex .)
    AND             reduce using rule 11 (constraint -> regex .)
    OR              reduce using rule 11 (constraint -> regex .)
    $end            reduce using rule 11 (constraint -> regex .)


state 4

    (8) constraint -> contains .

    RPAREN          reduce using rule 8 (constraint -> contains .)
    AND             reduce using rule 8 (constraint -> contains .)
    OR              reduce using rule 8 (constraint -> contains .)
    $end            reduce using rule 8 (constraint -> contains .)


state 5

    (19) length -> LENGTH . LPAREN var RPAREN LT DECNUMBER
    (20) length -> LENGTH . LPAREN var RPAREN GT DECNUMBER
    (21) length -> LENGTH . LPAREN var RPAREN LTE DECNUMBER
    (22) length -> LENGTH . LPAREN var RPAREN GTE DECNUMBER
    (23) length -> LENGTH . LPAREN var RPAREN EQL DECNUMBER

    LPAREN          shift and go to state 19


state 6

    (13) concat -> var . EQL var CONCAT var
    (17) contains -> var . CONTAINS NORMSTRING
    (18) strstr -> var . STRSTR NORMSTRING DECNUMBER
    (14) equal -> var . EQL var
    (16) equal -> var . EQL NORMSTRING
    (24) regex -> var . IN REGEX

    EQL             shift and go to state 22
    CONTAINS        shift and go to state 21
    STRSTR          shift and go to state 20
    IN              shift and go to state 23


state 7

    (0) S' -> formula .
    (4) formula -> formula . AND formula
    (5) formula -> formula . OR formula

    AND             shift and go to state 24
    OR              shift and go to state 25


state 8

    (15) equal -> NORMSTRING . EQL var

    EQL             shift and go to state 26


state 9

    (12) constraint -> allstring .

    RPAREN          reduce using rule 12 (constraint -> allstring .)
    AND             reduce using rule 12 (constraint -> allstring .)
    OR              reduce using rule 12 (constraint -> allstring .)
    $end            reduce using rule 12 (constraint -> allstring .)


state 10

    (26) var -> VAR .

    AND             reduce using rule 26 (var -> VAR .)
    OR              reduce using rule 26 (var -> VAR .)
    $end            reduce using rule 26 (var -> VAR .)
    RPAREN          reduce using rule 26 (var -> VAR .)
    EQL             reduce using rule 26 (var -> VAR .)
    CONTAINS        reduce using rule 26 (var -> VAR .)
    STRSTR          reduce using rule 26 (var -> VAR .)
    IN              reduce using rule 26 (var -> VAR .)
    CONCAT          reduce using rule 26 (var -> VAR .)


state 11

    (6) constraint -> concat .

    RPAREN          reduce using rule 6 (constraint -> concat .)
    AND             reduce using rule 6 (constraint -> concat .)
    OR              reduce using rule 6 (constraint -> concat .)
    $end            reduce using rule 6 (constraint -> concat .)


state 12

    (9) constraint -> strstr .

    RPAREN          reduce using rule 9 (constraint -> strstr .)
    AND             reduce using rule 9 (constraint -> strstr .)
    OR              reduce using rule 9 (constraint -> strstr .)
    $end            reduce using rule 9 (constraint -> strstr .)


state 13

    (2) formula -> constraint .

    AND             reduce using rule 2 (formula -> constraint .)
    OR              reduce using rule 2 (formula -> constraint .)
    $end            reduce using rule 2 (formula -> constraint .)
    RPAREN          reduce using rule 2 (formula -> constraint .)


state 14

    (10) constraint -> equal .

    RPAREN          reduce using rule 10 (constraint -> equal .)
    AND             reduce using rule 10 (constraint -> equal .)
    OR              reduce using rule 10 (constraint -> equal .)
    $end            reduce using rule 10 (constraint -> equal .)


state 15

    (7) constraint -> length .

    RPAREN          reduce using rule 7 (constraint -> length .)
    AND             reduce using rule 7 (constraint -> length .)
    OR              reduce using rule 7 (constraint -> length .)
    $end            reduce using rule 7 (constraint -> length .)


state 16

    (3) formula -> NOT . formula
    (1) formula -> . LPAREN formula RPAREN
    (2) formula -> . constraint
    (3) formula -> . NOT formula
    (4) formula -> . formula AND formula
    (5) formula -> . formula OR formula
    (6) constraint -> . concat
    (7) constraint -> . length
    (8) constraint -> . contains
    (9) constraint -> . strstr
    (10) constraint -> . equal
    (11) constraint -> . regex
    (12) constraint -> . allstring
    (13) concat -> . var EQL var CONCAT var
    (19) length -> . LENGTH LPAREN var RPAREN LT DECNUMBER
    (20) length -> . LENGTH LPAREN var RPAREN GT DECNUMBER
    (21) length -> . LENGTH LPAREN var RPAREN LTE DECNUMBER
    (22) length -> . LENGTH LPAREN var RPAREN GTE DECNUMBER
    (23) length -> . LENGTH LPAREN var RPAREN EQL DECNUMBER
    (17) contains -> . var CONTAINS NORMSTRING
    (18) strstr -> . var STRSTR NORMSTRING DECNUMBER
    (14) equal -> . var EQL var
    (15) equal -> . NORMSTRING EQL var
    (16) equal -> . var EQL NORMSTRING
    (24) regex -> . var IN REGEX
    (25) allstring -> . ALLSTRING var
    (26) var -> . VAR

    LPAREN          shift and go to state 2
    NOT             shift and go to state 16
    LENGTH          shift and go to state 5
    NORMSTRING      shift and go to state 8
    ALLSTRING       shift and go to state 1
    VAR             shift and go to state 10

    regex                          shift and go to state 3
    allstring                      shift and go to state 9
    strstr                         shift and go to state 12
    constraint                     shift and go to state 13
    contains                       shift and go to state 4
    equal                          shift and go to state 14
    length                         shift and go to state 15
    var                            shift and go to state 6
    formula                        shift and go to state 27
    concat                         shift and go to state 11

state 17

    (25) allstring -> ALLSTRING var .

    AND             reduce using rule 25 (allstring -> ALLSTRING var .)
    OR              reduce using rule 25 (allstring -> ALLSTRING var .)
    $end            reduce using rule 25 (allstring -> ALLSTRING var .)
    RPAREN          reduce using rule 25 (allstring -> ALLSTRING var .)


state 18

    (1) formula -> LPAREN formula . RPAREN
    (4) formula -> formula . AND formula
    (5) formula -> formula . OR formula

    RPAREN          shift and go to state 28
    AND             shift and go to state 24
    OR              shift and go to state 25


state 19

    (19) length -> LENGTH LPAREN . var RPAREN LT DECNUMBER
    (20) length -> LENGTH LPAREN . var RPAREN GT DECNUMBER
    (21) length -> LENGTH LPAREN . var RPAREN LTE DECNUMBER
    (22) length -> LENGTH LPAREN . var RPAREN GTE DECNUMBER
    (23) length -> LENGTH LPAREN . var RPAREN EQL DECNUMBER
    (26) var -> . VAR

    VAR             shift and go to state 10

    var                            shift and go to state 29

state 20

    (18) strstr -> var STRSTR . NORMSTRING DECNUMBER

    NORMSTRING      shift and go to state 30


state 21

    (17) contains -> var CONTAINS . NORMSTRING

    NORMSTRING      shift and go to state 31


state 22

    (13) concat -> var EQL . var CONCAT var
    (14) equal -> var EQL . var
    (16) equal -> var EQL . NORMSTRING
    (26) var -> . VAR

    NORMSTRING      shift and go to state 33
    VAR             shift and go to state 10

    var                            shift and go to state 32

state 23

    (24) regex -> var IN . REGEX

    REGEX           shift and go to state 34


state 24

    (4) formula -> formula AND . formula
    (1) formula -> . LPAREN formula RPAREN
    (2) formula -> . constraint
    (3) formula -> . NOT formula
    (4) formula -> . formula AND formula
    (5) formula -> . formula OR formula
    (6) constraint -> . concat
    (7) constraint -> . length
    (8) constraint -> . contains
    (9) constraint -> . strstr
    (10) constraint -> . equal
    (11) constraint -> . regex
    (12) constraint -> . allstring
    (13) concat -> . var EQL var CONCAT var
    (19) length -> . LENGTH LPAREN var RPAREN LT DECNUMBER
    (20) length -> . LENGTH LPAREN var RPAREN GT DECNUMBER
    (21) length -> . LENGTH LPAREN var RPAREN LTE DECNUMBER
    (22) length -> . LENGTH LPAREN var RPAREN GTE DECNUMBER
    (23) length -> . LENGTH LPAREN var RPAREN EQL DECNUMBER
    (17) contains -> . var CONTAINS NORMSTRING
    (18) strstr -> . var STRSTR NORMSTRING DECNUMBER
    (14) equal -> . var EQL var
    (15) equal -> . NORMSTRING EQL var
    (16) equal -> . var EQL NORMSTRING
    (24) regex -> . var IN REGEX
    (25) allstring -> . ALLSTRING var
    (26) var -> . VAR

    LPAREN          shift and go to state 2
    NOT             shift and go to state 16
    LENGTH          shift and go to state 5
    NORMSTRING      shift and go to state 8
    ALLSTRING       shift and go to state 1
    VAR             shift and go to state 10

    regex                          shift and go to state 3
    allstring                      shift and go to state 9
    strstr                         shift and go to state 12
    constraint                     shift and go to state 13
    contains                       shift and go to state 4
    equal                          shift and go to state 14
    length                         shift and go to state 15
    var                            shift and go to state 6
    formula                        shift and go to state 35
    concat                         shift and go to state 11

state 25

    (5) formula -> formula OR . formula
    (1) formula -> . LPAREN formula RPAREN
    (2) formula -> . constraint
    (3) formula -> . NOT formula
    (4) formula -> . formula AND formula
    (5) formula -> . formula OR formula
    (6) constraint -> . concat
    (7) constraint -> . length
    (8) constraint -> . contains
    (9) constraint -> . strstr
    (10) constraint -> . equal
    (11) constraint -> . regex
    (12) constraint -> . allstring
    (13) concat -> . var EQL var CONCAT var
    (19) length -> . LENGTH LPAREN var RPAREN LT DECNUMBER
    (20) length -> . LENGTH LPAREN var RPAREN GT DECNUMBER
    (21) length -> . LENGTH LPAREN var RPAREN LTE DECNUMBER
    (22) length -> . LENGTH LPAREN var RPAREN GTE DECNUMBER
    (23) length -> . LENGTH LPAREN var RPAREN EQL DECNUMBER
    (17) contains -> . var CONTAINS NORMSTRING
    (18) strstr -> . var STRSTR NORMSTRING DECNUMBER
    (14) equal -> . var EQL var
    (15) equal -> . NORMSTRING EQL var
    (16) equal -> . var EQL NORMSTRING
    (24) regex -> . var IN REGEX
    (25) allstring -> . ALLSTRING var
    (26) var -> . VAR

    LPAREN          shift and go to state 2
    NOT             shift and go to state 16
    LENGTH          shift and go to state 5
    NORMSTRING      shift and go to state 8
    ALLSTRING       shift and go to state 1
    VAR             shift and go to state 10

    regex                          shift and go to state 3
    allstring                      shift and go to state 9
    strstr                         shift and go to state 12
    constraint                     shift and go to state 13
    contains                       shift and go to state 4
    equal                          shift and go to state 14
    length                         shift and go to state 15
    var                            shift and go to state 6
    formula                        shift and go to state 36
    concat                         shift and go to state 11

state 26

    (15) equal -> NORMSTRING EQL . var
    (26) var -> . VAR

    VAR             shift and go to state 10

    var                            shift and go to state 37

state 27

    (3) formula -> NOT formula .
    (4) formula -> formula . AND formula
    (5) formula -> formula . OR formula

    AND             reduce using rule 3 (formula -> NOT formula .)
    OR              reduce using rule 3 (formula -> NOT formula .)
    $end            reduce using rule 3 (formula -> NOT formula .)
    RPAREN          reduce using rule 3 (formula -> NOT formula .)

  ! AND             [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]


state 28

    (1) formula -> LPAREN formula RPAREN .

    AND             reduce using rule 1 (formula -> LPAREN formula RPAREN .)
    OR              reduce using rule 1 (formula -> LPAREN formula RPAREN .)
    $end            reduce using rule 1 (formula -> LPAREN formula RPAREN .)
    RPAREN          reduce using rule 1 (formula -> LPAREN formula RPAREN .)


state 29

    (19) length -> LENGTH LPAREN var . RPAREN LT DECNUMBER
    (20) length -> LENGTH LPAREN var . RPAREN GT DECNUMBER
    (21) length -> LENGTH LPAREN var . RPAREN LTE DECNUMBER
    (22) length -> LENGTH LPAREN var . RPAREN GTE DECNUMBER
    (23) length -> LENGTH LPAREN var . RPAREN EQL DECNUMBER

    RPAREN          shift and go to state 38


state 30

    (18) strstr -> var STRSTR NORMSTRING . DECNUMBER

    DECNUMBER       shift and go to state 39


state 31

    (17) contains -> var CONTAINS NORMSTRING .

    AND             reduce using rule 17 (contains -> var CONTAINS NORMSTRING .)
    OR              reduce using rule 17 (contains -> var CONTAINS NORMSTRING .)
    $end            reduce using rule 17 (contains -> var CONTAINS NORMSTRING .)
    RPAREN          reduce using rule 17 (contains -> var CONTAINS NORMSTRING .)


state 32

    (13) concat -> var EQL var . CONCAT var
    (14) equal -> var EQL var .

    CONCAT          shift and go to state 40
    AND             reduce using rule 14 (equal -> var EQL var .)
    OR              reduce using rule 14 (equal -> var EQL var .)
    $end            reduce using rule 14 (equal -> var EQL var .)
    RPAREN          reduce using rule 14 (equal -> var EQL var .)


state 33

    (16) equal -> var EQL NORMSTRING .

    AND             reduce using rule 16 (equal -> var EQL NORMSTRING .)
    OR              reduce using rule 16 (equal -> var EQL NORMSTRING .)
    $end            reduce using rule 16 (equal -> var EQL NORMSTRING .)
    RPAREN          reduce using rule 16 (equal -> var EQL NORMSTRING .)


state 34

    (24) regex -> var IN REGEX .

    AND             reduce using rule 24 (regex -> var IN REGEX .)
    OR              reduce using rule 24 (regex -> var IN REGEX .)
    $end            reduce using rule 24 (regex -> var IN REGEX .)
    RPAREN          reduce using rule 24 (regex -> var IN REGEX .)


state 35

    (4) formula -> formula AND formula .
    (4) formula -> formula . AND formula
    (5) formula -> formula . OR formula

    AND             reduce using rule 4 (formula -> formula AND formula .)
    OR              reduce using rule 4 (formula -> formula AND formula .)
    $end            reduce using rule 4 (formula -> formula AND formula .)
    RPAREN          reduce using rule 4 (formula -> formula AND formula .)

  ! AND             [ shift and go to state 24 ]
  ! OR              [ shift and go to state 25 ]


state 36

    (5) formula -> formula OR formula .
    (4) formula -> formula . AND formula
    (5) formula -> formula . OR formula

    OR              reduce using rule 5 (formula -> formula OR formula .)
    $end            reduce using rule 5 (formula -> formula OR formula .)
    RPAREN          reduce using rule 5 (formula -> formula OR formula .)
    AND             shift and go to state 24

  ! AND             [ reduce using rule 5 (formula -> formula OR formula .) ]
  ! OR              [ shift and go to state 25 ]


state 37

    (15) equal -> NORMSTRING EQL var .

    AND             reduce using rule 15 (equal -> NORMSTRING EQL var .)
    OR              reduce using rule 15 (equal -> NORMSTRING EQL var .)
    $end            reduce using rule 15 (equal -> NORMSTRING EQL var .)
    RPAREN          reduce using rule 15 (equal -> NORMSTRING EQL var .)


state 38

    (19) length -> LENGTH LPAREN var RPAREN . LT DECNUMBER
    (20) length -> LENGTH LPAREN var RPAREN . GT DECNUMBER
    (21) length -> LENGTH LPAREN var RPAREN . LTE DECNUMBER
    (22) length -> LENGTH LPAREN var RPAREN . GTE DECNUMBER
    (23) length -> LENGTH LPAREN var RPAREN . EQL DECNUMBER

    LT              shift and go to state 43
    GT              shift and go to state 41
    LTE             shift and go to state 42
    GTE             shift and go to state 45
    EQL             shift and go to state 44


state 39

    (18) strstr -> var STRSTR NORMSTRING DECNUMBER .

    RPAREN          reduce using rule 18 (strstr -> var STRSTR NORMSTRING DECNUMBER .)
    AND             reduce using rule 18 (strstr -> var STRSTR NORMSTRING DECNUMBER .)
    OR              reduce using rule 18 (strstr -> var STRSTR NORMSTRING DECNUMBER .)
    $end            reduce using rule 18 (strstr -> var STRSTR NORMSTRING DECNUMBER .)


state 40

    (13) concat -> var EQL var CONCAT . var
    (26) var -> . VAR

    VAR             shift and go to state 10

    var                            shift and go to state 46

state 41

    (20) length -> LENGTH LPAREN var RPAREN GT . DECNUMBER

    DECNUMBER       shift and go to state 47


state 42

    (21) length -> LENGTH LPAREN var RPAREN LTE . DECNUMBER

    DECNUMBER       shift and go to state 48


state 43

    (19) length -> LENGTH LPAREN var RPAREN LT . DECNUMBER

    DECNUMBER       shift and go to state 49


state 44

    (23) length -> LENGTH LPAREN var RPAREN EQL . DECNUMBER

    DECNUMBER       shift and go to state 50


state 45

    (22) length -> LENGTH LPAREN var RPAREN GTE . DECNUMBER

    DECNUMBER       shift and go to state 51


state 46

    (13) concat -> var EQL var CONCAT var .

    AND             reduce using rule 13 (concat -> var EQL var CONCAT var .)
    OR              reduce using rule 13 (concat -> var EQL var CONCAT var .)
    $end            reduce using rule 13 (concat -> var EQL var CONCAT var .)
    RPAREN          reduce using rule 13 (concat -> var EQL var CONCAT var .)


state 47

    (20) length -> LENGTH LPAREN var RPAREN GT DECNUMBER .

    RPAREN          reduce using rule 20 (length -> LENGTH LPAREN var RPAREN GT DECNUMBER .)
    AND             reduce using rule 20 (length -> LENGTH LPAREN var RPAREN GT DECNUMBER .)
    OR              reduce using rule 20 (length -> LENGTH LPAREN var RPAREN GT DECNUMBER .)
    $end            reduce using rule 20 (length -> LENGTH LPAREN var RPAREN GT DECNUMBER .)


state 48

    (21) length -> LENGTH LPAREN var RPAREN LTE DECNUMBER .

    RPAREN          reduce using rule 21 (length -> LENGTH LPAREN var RPAREN LTE DECNUMBER .)
    AND             reduce using rule 21 (length -> LENGTH LPAREN var RPAREN LTE DECNUMBER .)
    OR              reduce using rule 21 (length -> LENGTH LPAREN var RPAREN LTE DECNUMBER .)
    $end            reduce using rule 21 (length -> LENGTH LPAREN var RPAREN LTE DECNUMBER .)


state 49

    (19) length -> LENGTH LPAREN var RPAREN LT DECNUMBER .

    RPAREN          reduce using rule 19 (length -> LENGTH LPAREN var RPAREN LT DECNUMBER .)
    AND             reduce using rule 19 (length -> LENGTH LPAREN var RPAREN LT DECNUMBER .)
    OR              reduce using rule 19 (length -> LENGTH LPAREN var RPAREN LT DECNUMBER .)
    $end            reduce using rule 19 (length -> LENGTH LPAREN var RPAREN LT DECNUMBER .)


state 50

    (23) length -> LENGTH LPAREN var RPAREN EQL DECNUMBER .

    RPAREN          reduce using rule 23 (length -> LENGTH LPAREN var RPAREN EQL DECNUMBER .)
    AND             reduce using rule 23 (length -> LENGTH LPAREN var RPAREN EQL DECNUMBER .)
    OR              reduce using rule 23 (length -> LENGTH LPAREN var RPAREN EQL DECNUMBER .)
    $end            reduce using rule 23 (length -> LENGTH LPAREN var RPAREN EQL DECNUMBER .)


state 51

    (22) length -> LENGTH LPAREN var RPAREN GTE DECNUMBER .

    RPAREN          reduce using rule 22 (length -> LENGTH LPAREN var RPAREN GTE DECNUMBER .)
    AND             reduce using rule 22 (length -> LENGTH LPAREN var RPAREN GTE DECNUMBER .)
    OR              reduce using rule 22 (length -> LENGTH LPAREN var RPAREN GTE DECNUMBER .)
    $end            reduce using rule 22 (length -> LENGTH LPAREN var RPAREN GTE DECNUMBER .)

